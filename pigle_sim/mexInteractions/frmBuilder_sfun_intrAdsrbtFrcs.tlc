%% File : frmBuilder_sfun_intrAdsrbtFrcs.tlc
%% Created : Sat Mar 30 19:30:23 2019
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "frmBuilder_sfun_intrAdsrbtFrcs.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  frmBuilder_sfun_intrAdsrbtFrcs "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void frmBuilder_sfun_intrAdsrbtFrcs_Start_wrapper(const real_T *nop_1, const int_T p_width0,
			const real_T *size_Fint_1, const int_T p_width1,
			const real_T *model_dim_1, const int_T p_width2);

    extern void frmBuilder_sfun_intrAdsrbtFrcs_Outputs_wrapper(const real_T *pos,
			const real_T *x,
			const real_T *fTbltd,
			const real_T *celldim,
			const real_T *identity,
			const real_T *f_perm,
			const real_T *f_func,
			const real_T *in_cutoff_r,
			const real_T *out_cutoff_r,
			const real_T *z_enabled,
			const real_T *freeze,
			const real_T *active,
			const int32_T *clisti,
			const int32_T *clist,
			real_T *iaf,
			const real_T *nop_1, const int_T p_width0,
			const real_T *size_Fint_1, const int_T p_width1,
			const real_T *model_dim_1, const int_T p_width2);

    extern void frmBuilder_sfun_intrAdsrbtFrcs_Terminate_wrapper(const real_T *nop_1, const int_T p_width0,
			const real_T *size_Fint_1, const int_T p_width1,
			const real_T *model_dim_1, const int_T p_width2);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign pu4 = LibBlockInputSignalAddr(4, "", "", 0)
  %assign pu5 = LibBlockInputSignalAddr(5, "", "", 0)
  %assign pu6 = LibBlockInputSignalAddr(6, "", "", 0)
  %assign pu7 = LibBlockInputSignalAddr(7, "", "", 0)
  %assign pu8 = LibBlockInputSignalAddr(8, "", "", 0)
  %assign pu9 = LibBlockInputSignalAddr(9, "", "", 0)
  %assign pu10 = LibBlockInputSignalAddr(10, "", "", 0)
  %assign pu11 = LibBlockInputSignalAddr(11, "", "", 0)
  %assign pu12 = LibBlockInputSignalAddr(12, "", "", 0)
  %assign pu13 = LibBlockInputSignalAddr(13, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
    %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
  %else
    %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
  %endif
  %assign nelements2 = LibBlockParameterSize(P2)
  %assign param_width2 = nelements2[0] * nelements2[1]
  %if (param_width2) > 1
    %assign pp2 = LibBlockMatrixParameterBaseAddr(P2)
  %else
    %assign pp2 = LibBlockParameterAddr(P2, "", "", 0)
  %endif
  %assign nelements3 = LibBlockParameterSize(P3)
  %assign param_width3 = nelements3[0] * nelements3[1]
  %if (param_width3) > 1
    %assign pp3 = LibBlockMatrixParameterBaseAddr(P3)
  %else
    %assign pp3 = LibBlockParameterAddr(P3, "", "", 0)
  %endif
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  frmBuilder_sfun_intrAdsrbtFrcs_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<pu4>, %<pu5>, %<pu6>, %<pu7>, %<pu8>, %<pu9>, %<pu10>, %<pu11>, %<pu12>, %<pu13>, %<py0>, %<pp1>, %<param_width1>, %<pp2>, %<param_width2>, %<pp3>, %<param_width3>);
  %%
%endfunction



%% [EOF] frmBuilder_sfun_intrAdsrbtFrcs.tlc

